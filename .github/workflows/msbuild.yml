name: MSBuild

on: [push]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: ./CISetupTestUWP/CISetupTestUWP.sln
  BUILD_OUTPUT_FILE_PATH:: CISetupTestUWP/bin/

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release
  BUILD_PLATFORM: x64

jobs:
  build:
    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v2

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} /p:Platform=${{env.BUILD_PLATFORM}} ${{env.SOLUTION_FILE_PATH}}

    - name: Prep artifacts
      run: mkdir __artifacts

    - name: Copy artifacts
      run: xcopy  ${{env.BUILD_OUTPUT_FILE_PATH}}${{env.BUILD_PLATFORM}}/${{env.BUILD_CONFIGURATION}} __artifacts /ISCY

    - uses: actions/upload-artifact@v2
      with:
        name: Upload
        path: __artifacts #c:/actions-runner/_work/CISetupTest/CISetupTest/CISetupTestUWP/bin/x64/release/
        if-no-files-found: error
